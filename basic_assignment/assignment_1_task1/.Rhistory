logistic_interaction <- glm(Survived~PClass*Age*Sex, data = titanic, family = binomial)
summary(logistic_interaction)$coefficients
# predict for 53 years and all PClass
classes <- as.character(unique(titanic$PClass))
sexes <- as.character(unique(titanic$Sex))
age <- 53
new_data <- expand.grid(PClass = classes, Sex = sexes, Age = age)
results <- predict(logistic, new_data, type="response")
logistic_interaction <- glm(Survived~PClass*Age*Sex, data = titanic, family = binomial)
summary(logistic_interaction)$coefficients
# predict for 53 years and all PClass
classes <- as.character(unique(titanic$PClass))
sexes <- as.character(unique(titanic$Sex))
age <- 53
new_data <- expand.grid(PClass = classes, Sex = sexes, Age = age)
results <- predict(logistic, new_data, type="response")
new_data <- new_data %>% bind_cols(results)
logistic_interaction <- glm(Survived~PClass*Age*Sex, data = titanic, family = binomial)
summary(logistic_interaction)$coefficients
# predict for 53 years and all PClass
classes <- as.character(unique(titanic$PClass))
sexes <- as.character(unique(titanic$Sex))
age <- 53
new_data <- expand.grid(PClass = classes, Sex = sexes, Age = age)
results <- predict(logistic, new_data, type="response")
new_data <- new_data %>% bind_cols(Survival = results)
logistic_interaction <- glm(Survived~PClass*Age*Sex, data = titanic, family = binomial)
summary(logistic_interaction)$coefficients
# predict for 53 years and all PClass
classes <- as.character(unique(titanic$PClass))
sexes <- as.character(unique(titanic$Sex))
age <- 53
new_data <- expand.grid(PClass = classes, Sex = sexes, Age = age)
results <- predict(logistic, new_data, type="response")
final <- new_data %>% bind_cols(Survival = results)
knitr::kable(final)
tot <- xtabs(Survived ~ PClass + Sex, data = titanic)
new_model <- glm(Survived~PClass+Sex, data = titanic, family = binomial)
new_model <- glm(Survived~PClass+Sex, data = titanic, family = binomial)
drop1(new_model,test="Chisq")
africa <- read.table(file="data/africa.txt", header=TRUE)
africa <- read.table(file="data/africa.txt", header=TRUE)
poisson_model <- glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)
africa <- read.table(file="data/africa.txt", header=TRUE)
poisson_model <- glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)
summary(africa)
africa <- read.table(file="data/africa.txt", header=TRUE)
poisson_model <- glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)
summary(poisson_model)
glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa))
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa))
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size,family=poisson,data=africa)) # remove size
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn,family=poisson,data=africa)) # remove
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size,family=poisson,data=africa)) # remove size
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn,family=poisson,data=africa)) # remove popn
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote,family=poisson,data=africa)) # remove popn
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size,family=poisson,data=africa)) # remove size
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn,family=poisson,data=africa)) # remove popn
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote,family=poisson,data=africa)) # remove pctvote
summary(glm(miltcoup~oligarchy+pollib+parties,family=poisson,data=africa)) # final
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size,family=poisson,data=africa)) # remove size
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn,family=poisson,data=africa)) # remove popn
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote,family=poisson,data=africa)) # remove pctvote
final_poisson <- glm(miltcoup~oligarchy+pollib+parties,family=poisson,data=africa) # final
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size,family=poisson,data=africa)) # remove size
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn,family=poisson,data=africa)) # remove popn
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote,family=poisson,data=africa)) # remove pctvote
final_poisson <- glm(miltcoup~oligarchy+pollib+parties,family=poisson,data=africa) # final
summary(final_poisson)
africa <- read.table(file="data/africa.txt", header=TRUE)
africa$pollib <- as.factor(africa$pollib)
poisson_model <- glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)
summary(poisson_model)
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numelec+numregim,family=poisson,data=africa)) # remove numelec
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size+numregim,family=poisson,data=africa)) # remove numregim
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn+size,family=poisson,data=africa)) # remove size
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote+popn,family=poisson,data=africa)) # remove popn
summary(glm(miltcoup~oligarchy+pollib+parties+pctvote,family=poisson,data=africa)) # remove pctvote
final_poisson <- glm(miltcoup~oligarchy+pollib+parties,family=poisson,data=africa) # final
summary(final_poisson)
new_data <- africa %>% mutate_if(is.numeric, mean)
View(new_data)
new_data <- africa %>% mutate_if(is.numeric, mean)
new_data[1]
new_data <- africa %>% mutate_if(is.numeric, mean)
new_data[,1]
new_data <- africa %>% mutate_if(is.numeric, mean)
new_data[:,1]
new_data <- africa %>% mutate_if(is.numeric, mean) %>% top_n(1)
new_data <- africa %>% mutate_if(is.numeric, mean) %>% top_n(1)
View(new_data)
new_data <- africa %>% mutate_if(is.numeric, mean)
new_data[1,]
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib)
new_data[1,]
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib)
new_data <- new_data[1,]
expand.grid(new_data)
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib)
new_data <- new_data[1,]
expand.grid(new_data, unique(africa$pollib))
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popm <-
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of polical liberalization levels
pollib <- as.character(unique(africa$pollib))
new_data <- expand.grid(PClass = classes, Sex = sexes, Age = age)
results <- predict(logistic, new_data, type="response")
final <- new_data %>% bind_cols(Survival = results)
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of polical liberalization levels
pollib <- as.character(unique(africa$pollib))
new_data <- expand.grid(oligarchy = avg_oligarchy, pollib = pollib)
results <- predict(logistic, new_data, type="response")
View(new_model)
View(new_data)
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of polical liberalization levels
pollib <- as.character(unique(africa$pollib))
new_data <- expand.grid(oligarchy = avg_oligarchy, pollib = pollib,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelac = avg_numelec, numregim = avg_numregim)
results <- predict(poisson_model, new_data, type="response")
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of polical liberalization levels
pollib <- as.character(unique(africa$pollib))
new_data <- expand.grid(oligarchy = avg_oligarchy, pollib = pollib,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelec = avg_numelec, numregim = avg_numregim)
results <- predict(poisson_model, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of polical liberalization levels
pollib <- as.character(unique(africa$pollib))
new_data <- expand.grid(oligarchy = avg_oligarchy, pollib = pollib,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelec = avg_numelec, numregim = avg_numregim)
results <- predict(poisson_model, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final)
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of polical liberalization levels
pollib <- as.character(unique(africa$pollib))
new_data <- expand.grid(oligarchy = avg_oligarchy, pollib = pollib,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelec = avg_numelec, numregim = avg_numregim)
results <- predict(final_poisson, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final)
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of polical liberalization levels
pollib <- as.character(unique(africa$pollib))
new_data <- expand.grid(oligarchy = avg_oligarchy, pollib = pollib,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelec = avg_numelec, numregim = avg_numregim)
# full model
results <- predict(poisson_model, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the full model")
# reduced model
results <- predict(final_poisson, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the reduced model")
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of political liberalization levels
pollib <- sort(as.character(unique(africa$pollib)))
new_data <- expand.grid(pollib = pollib, oligarchy = avg_oligarchy,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelec = avg_numelec, numregim = avg_numregim)
# full model
results <- predict(poisson_model, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the full model")
# reduced model
results <- predict(final_poisson, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the reduced model")
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of political liberalization levels
pollib <- sort(as.character(unique(africa$pollib)))
new_data <- expand.grid(pollib = pollib, oligarchy = avg_oligarchy,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelec = avg_numelec, numregim = avg_numregim)
new_data_reduced <- expand.grid(pollib = pollib, oligarchy = avg_oligarchy,
parties = avg_parties)
# full model
results <- predict(poisson_model, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the full model")
# reduced model
results <- predict(final_poisson, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the reduced model")
# reduced model
results <- predict(final_poisson, new_data_reduced, type="response")
final <- new_data_reduced %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the reduced model")
# get average values
new_data <- africa %>% mutate_if(is.numeric, mean) %>% select(-pollib, -miltcoup)
new_data <- new_data[1,]
avg_oligarchy <- new_data$oligarchy; avg_parties <- new_data$parties;
avg_pctvote <- new_data$pctvote; avg_popn <- new_data$popn;
avg_size <- new_data$size; avg_numelec <- new_data$numelec;
avg_numregim <- new_data$numregim
# get a list of political liberalization levels
pollib <- sort(as.character(unique(africa$pollib)))
new_data <- expand.grid(pollib = pollib, oligarchy = avg_oligarchy,
parties = avg_parties, pctvote = avg_pctvote,
popn = avg_popn, size = avg_size,
numelec = avg_numelec, numregim = avg_numregim)
new_data_reduced <- expand.grid(pollib = pollib, oligarchy = avg_oligarchy,
parties = avg_parties)
# full model
results <- predict(poisson_model, new_data, type="response")
final <- new_data %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the full model")
# reduced model
results <- predict(final_poisson, new_data_reduced, type="response")
final <- new_data_reduced %>% bind_cols(Prediction = results)
knitr::kable(final, caption = "Predictions with the reduced model")
# load packages
library(tidyverse)
library(rstudioapi)
library(lubridate)
library(arules)
library(arulesViz)
# set working directory
setwd(dirname(getActiveDocumentContext()$path))
# load the data
data <- read_delim("data/final/data_clean.csv", delim = ",")
data <- data %>%
mutate(gain = str_replace(gain, ",", "."),
gain = as.numeric(gain))
# extract hour from the bed time answer
data <- data %>%
mutate(Timestamp = mdy_hms(Timestamp)) %>%
mutate(bed_time = hms(bed_time),
bed_hour = hour(bed_time),
bed_minutes = minute(bed_time))
# extract hour from the bed time answer
data <- data %>%
mutate(Timestamp = mdy_hms(Timestamp)) %>%
mutate(bed_time = hms(bed_time),
bed_hour = hour(bed_time),
bed_minutes = minute(bed_time)) %>%
mutate(hour_survey = hour(TimeStamp))
# load packages
library(tidyverse)
library(rstudioapi)
library(lubridate)
library(arules)
library(arulesViz)
# set working directory
setwd(dirname(getActiveDocumentContext()$path))
# load the data
data <- read_delim("data/final/data_clean.csv", delim = ",")
data <- data %>%
mutate(gain = str_replace(gain, ",", "."),
gain = as.numeric(gain))
# extract hour from the bed time answer
data <- data %>%
mutate(Timestamp = mdy_hms(Timestamp)) %>%
mutate(bed_time = hms(bed_time),
bed_hour = hour(bed_time),
bed_minutes = minute(bed_time)) %>%
mutate(hour_survey = hour(Timestamp))
# time they went to sleep
extra_var <- data %>%
mutate(went_to_bed = case_when(
bed_hour >= 19 & bed_hour <=21 ~ "early",
(bed_hour > 21 & bed_hour <=24) | (bed_hour >= 0 & bed_hour <=1)  ~ "normal",
bed_hour > 1 & bed_hour <=5 ~ "late",
is.na(bed_hour) ~ "NA",
TRUE ~ "Other"
)) %>%
# week day of the form
mutate(weekday = as.factor(wday(Timestamp, week_start = 1))) %>%
# stress level
mutate(stress_level = case_when(
stress >= 0 & stress <=33 ~ "low",
(stress > 33 & stress <=66) ~ "mid",
stress > 66 & stress <=100 ~ "high",
is.na(stress) ~ "NA",
TRUE ~ "Other"
))
extra_var %>%
group_by(stress_level) %>%
summarise(n = n())
data %>%
distict()
data %>%
distinct()
data %>%
distinct(-Timestamp)
data %>%
distinct()
data %>%
select(-Timestamp) %>%
distinct()
# load packages
library(tidyverse)
library(rstudioapi)
library(lubridate)
# set working directory
setwd(dirname(getActiveDocumentContext()$path))
# load the cat data
cat_data <- read_delim("data/data_fin.csv", delim = ";")
program_data <- read_csv("data/cleaned_programs.csv")
# load packages
library(tidyverse)
library(rstudioapi)
library(lubridate)
# set working directory
setwd(dirname(getActiveDocumentContext()$path))
# load the cat data
cat_data <- read_delim("data/data_fin.csv", delim = ";")
program_data <- read_csv("data/cleaned_programs.csv")
data <- cat_data %>%
left_join(program_data, by = c("X1" = "id")) %>%
select(-X1, -What.programme.are.you.in.)
View(data)
data <- cat_data %>%
left_join(program_data, by = c("X1" = "id")) %>%
select(-X1, -What.programme.are.you.in.)
data_clean <- data %>%
rename(ml = Have.you.taken.a.course.on.machine.learning.,
ir = Have.you.taken.a.course.on.information.retrieval.,
stats = Have.you.taken.a.course.on.statistics.,
db = Have.you.taken.a.course.on.databases.,
gender = What.is.your.gender.,
chocolate = Chocolate.makes.you.....,
birthday = birthday.x,
neighbors = neighbors.x,
good_day_1 = What.makes.a.good.day.for.you..1..,
good_day_2 = What.makes.a.good.day.for.you..2..,
program = clean_program) %>%
relocate(program)
data_clean %>%
select(-Timestamp) %>%
distinct()
data_clean <- data %>%
rename(ml = Have.you.taken.a.course.on.machine.learning.,
ir = Have.you.taken.a.course.on.information.retrieval.,
stats = Have.you.taken.a.course.on.statistics.,
db = Have.you.taken.a.course.on.databases.,
gender = What.is.your.gender.,
chocolate = Chocolate.makes.you.....,
birthday = birthday.x,
neighbors = neighbors.x,
good_day_1 = What.makes.a.good.day.for.you..1..,
good_day_2 = What.makes.a.good.day.for.you..2..,
program = clean_program) %>%
relocate(program) %>%
mutate(id = row_number())
data_clean %>%
select(-Timestamp) %>%
distinct()
no_duplicated <- data_clean %>%
select(-Timestamp) %>%
distinct()
no_duplicated <- data_clean %>%
select(-Timestamp, -id) %>%
distinct()
data_clean %>%
anti_join(no_duplicated)
no_duplicates %>%
anti_join(data_clean)
no_duplicated %>%
anti_join(data_clean)
View(no_duplicated)
## exploration for logistic regression
data %>%
group_by(neighbors, stand) %>%
count()
## exploration for logistic regression
data %>%
group_by(neighbors, stand) %>%
summarise(n = n())
# load packages
library(tidyverse)
library(rstudioapi)
library(lubridate)
library(arules)
library(arulesViz)
# set working directory
setwd(dirname(getActiveDocumentContext()$path))
# load the data
data <- read_delim("data/final/data_clean.csv", delim = ",")
data <- data %>%
mutate(gain = str_replace(gain, ",", "."),
gain = as.numeric(gain))
# extract hour from the bed time answer
data <- data %>%
mutate(Timestamp = mdy_hms(Timestamp)) %>%
mutate(bed_time = hms(bed_time),
bed_hour = hour(bed_time),
bed_minutes = minute(bed_time)) %>%
mutate(hour_survey = hour(Timestamp))
# time they went to sleep
extra_var <- data %>%
mutate(went_to_bed = case_when(
bed_hour >= 19 & bed_hour <=21 ~ "early",
(bed_hour > 21 & bed_hour <=24) | (bed_hour >= 0 & bed_hour <=1)  ~ "normal",
bed_hour > 1 & bed_hour <=5 ~ "late",
is.na(bed_hour) ~ "NA",
TRUE ~ "Other"
)) %>%
# week day of the form
mutate(weekday = as.factor(wday(Timestamp, week_start = 1))) %>%
# stress level
mutate(stress_level = case_when(
stress >= 0 & stress <=33 ~ "low",
(stress > 33 & stress <=66) ~ "mid",
stress > 66 & stress <=100 ~ "high",
is.na(stress) ~ "NA",
TRUE ~ "Other"
))
## exploration for logistic regression
extra_var %>%
group_by(neighbors, stand) %>%
summarise(n = n())
